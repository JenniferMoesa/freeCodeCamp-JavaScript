COMMENT YOUR JAVASCRIPT CODE

// This is an in-line comment.

/* This is a
multi-line comment */

-------------------------------------------------------------------------------------------------------------------

DECLARE JAVASCRIPT VARIABLES
We tell JavaScript to create or declare a variable by putting the keyword var in front of it, like so:

var ourName;
creates a variable called ourName. In JavaScript we end statements with semicolons.
Variable names can be made up of numbers, letters, and $ or _, but may not contain spaces or start with a number.

---------------------------------------------------------------------------------------------------------------------

STORING VALUES WITH THE ASSIGNMENT OPERATORPASSED
In JavaScript, you can store a value in a variable with the assignment operator (=).

myVariable = 5;
This assigns the Number value 5 to myVariable.

If there are any calculations to the right of the = operator,
those are performed before the value is assigned to the variable on the left of the operator.

var myVar;
myVar = 5;
First, this code creates a variable named myVar. Then, the code assigns 5 to myVar. 
Now, if myVar appears again in the code, the program will treat it as if it is 5.

----------------------------------------------------------------------------------------------------------------------

ASSIGNING THE VALUE OF ONE VARIABLE TO ANOTHER
After a value is assigned to a variable using the assignment operator,
you can assign the value of that variable to another variable using the assignment operator.

var myVar; //declares a myVar variable with no value
myVar = 5; //assigns the variable myVar with the value 5
var myNum; //a variable named myNum is declared with no value
myNum = myVar; //the contents of myVar (which is 5) is assigned to the variable myNum. Now, myNum also has the value of 5.

--------------------------------------------------------------------------------------------------------------------------

INITIALIZING VARIABLES WITH THE ASSIGNMENT OPERATOR
It is common to initialize a variable to an initial value in the same line as it is declared.

var myVar = 0;
Creates a new variable called myVar and assigns it an initial value of 0.

---------------------------------------------------------------------------------------------------------------------------

UNDERSTANDING UNINITIALIZED VARIBLES

When JavaScript variables are declared, they have an initial value of undefined.
If you do a mathematical operation on an undefined variable your result will be NaN which means "Not a Number".
If you concatenate a string with an undefined variable, you will get a literal string of undefined.

Initialize the three variables a, b, and c with 5, 10, and "I am a" respectively so that they will not be undefined.

var a = 5;
var b = 10;
var c = "I am a";
// Only change code above this line

a = a + 1; //6
b = b + 5; //15
c = c + " String!"; //I am a String!

----------------------------------------------------------------------------------------------------------------------------

UNDERSTANDING CASE SENSITIVITY IN VARIABLES

In JavaScript all variables and function names are case sensitive. This means that capitalization matters.

MYVAR is not the same as MyVar nor myvar. It is possible to have multiple distinct variables with the same name but different casing.
It is strongly recommended that for the sake of clarity, you do not use this language feature.

Best Practice

Write variable names in JavaScript in camelCase.
In camelCase, multi-word variable names have the first word in lowercase and the first letter of each subsequent word is capitalized.

Examples:

var someVariable;
var anotherVariableName;
var thisVariableNameIsSoLong;

------------------------------------------------------------------------------------------------------------------------------

ADD TWO NUMBERS WITH JAVASCRIPT

Number is a data type in JavaScript which represents numeric data.

Now let's try to add two numbers using JavaScript.

JavaScript uses the + symbol as an addition operator when placed between two numbers.

Example:

myVar = 5 + 10;
myVar now has the value 15.

-------------------------------------------------------------------------------------------------------------------------------










ASSIGNMENT WITH A RETURNED VALUE
Call the processArg function with an argument of 7 and assign its return value to the variable processed.

var processed = 0;

function processArg(num) {
  return (num + 3) / 5;
}

processed = processArg(7);

//processed has a value of 2
